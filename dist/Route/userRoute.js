"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = __importDefault(require("../Controllers/userController"));
const authMiddleware_1 = require("../Middleware/authMiddleware");
const userrouter = express_1.default.Router();
userrouter.post('/getOtp', userController_1.default.getOtp.bind(userController_1.default));
userrouter.post('/verifyOtp', userController_1.default.verifyOtp.bind(userController_1.default));
userrouter.post('/login', userController_1.default.login.bind(userController_1.default));
userrouter.post('/resendOtp', userController_1.default.resendOtp.bind(userController_1.default));
userrouter.post('/logout', userController_1.default.logout.bind(userController_1.default));
userrouter.post('/google-auth', userController_1.default.googleAuth.bind(userController_1.default));
userrouter.put('/update-profile', authMiddleware_1.userAuth, userController_1.default.updateProfile.bind(userController_1.default));
userrouter.get('/verified-doctors', userController_1.default.getDoctors.bind(userController_1.default));
userrouter.get('/doctor-slots/:id', authMiddleware_1.userAuth, userController_1.default.doctorSlots.bind(userController_1.default));
userrouter.post('/create-payment-intent', authMiddleware_1.userAuth, userController_1.default.createPaymentIntent.bind(userController_1.default));
userrouter.post('/book-appointment', authMiddleware_1.userAuth, userController_1.default.createAppointment.bind(userController_1.default));
userrouter.get('/appointment-details/:id', authMiddleware_1.userAuth, userController_1.default.appointmentDetails.bind(userController_1.default));
userrouter.get('/cancelandcompleteappointment-details/:id', authMiddleware_1.userAuth, userController_1.default.cancelandcompleteAppointmentDetails.bind(userController_1.default));
userrouter.post('/refund-appointment', authMiddleware_1.userAuth, userController_1.default.refundPayment.bind(userController_1.default));
userrouter.post('/reset-password', userController_1.default.resetPassword.bind(userController_1.default));
userrouter.post('/send-forgottenpassword', userController_1.default.sendForgottenpassword.bind(userController_1.default));
userrouter.post('/verify-forgottenpassword', userController_1.default.verifyForgottenpassword.bind(userController_1.default));
userrouter.post('/reset-forgottenpassword', userController_1.default.resetForgottenpassword.bind(userController_1.default));
userrouter.get('/prescriptions/:appointmentid', userController_1.default.getPrescriptions.bind(userController_1.default));
userrouter.post('/reviews', authMiddleware_1.userAuth, userController_1.default.reviews.bind(userController_1.default));
userrouter.post('/refresh-token', userController_1.default.refreshToken.bind(userController_1.default));
exports.default = userrouter;
